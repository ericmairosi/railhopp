name: Deploy Railhopp to Production (Heroku)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test & Build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Lint code
      run: pnpm lint

    - name: Type check
      run: pnpm type-check

    - name: Run tests
      run: pnpm test

    - name: Build application
      run: pnpm build
      env:
        NODE_ENV: production
        NEXT_TELEMETRY_DISABLED: 1

  deploy-web:
    runs-on: ubuntu-latest
    name: Deploy Web App
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./

  deploy-websocket:
    runs-on: ubuntu-latest
    name: Deploy WebSocket Server
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for git subtree

    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "websocket-server"
        procfile: "web: node server.js"

  health-check:
    runs-on: ubuntu-latest
    name: Health Check
    needs: [deploy-web, deploy-websocket]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Check Web App Health
      run: |
        curl -f ${{ secrets.PRODUCTION_URL }}/api/health || exit 1

    - name: Check WebSocket Health
      run: |
        curl -f ${{ secrets.WEBSOCKET_URL }}/health || exit 1

    - name: Notify Success
      if: success()
      run: |
        echo "ðŸŽ‰ Deployment successful!"
        echo "Web App: ${{ secrets.PRODUCTION_URL }}"
        echo "WebSocket: ${{ secrets.WEBSOCKET_URL }}"
